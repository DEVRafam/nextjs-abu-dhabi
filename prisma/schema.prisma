generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String        @id @default(cuid())
  name                  String
  surname               String
  email                 String        @unique
  emailVerified         DateTime?
  avatar                String?
  country               String
  countryCode           String        
  gender                Gender        @default(MALE)
  password              String
  createdAt             DateTime      @default(now())
  isAdmin               Boolean       @default(false)

  sessions              Session[]
  createdDestinations   Destination[]
}

model Session {
  id          String   @id @default(cuid())
  userId      String   @map("user_id")
  accessToken String   @unique
  expires     DateTime
  createdAt   DateTime @default(now())

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@map("sessions")
}

model Destination {
  id               String     @id @default(cuid())
  creatorId        String?    @map("creator_id")
  slug             String     @unique
  city             String
  country          String
  countryCode      String     
  population       Int
  continent        Continent
  shortDescription String     
  description      Json
  folder           String
  createdAt        DateTime   @default(now())
  
  landmarks        Landmark[]
  creator          User?      @relation(fields:[creatorId], references: [id], onDelete: SetNull)
}

model Landmark {
  id                  String        @id @default(cuid())
  destinationId       String        @map("destination_id")
  slug                String        @unique
  title               String
  description         String
  picture             String
  type                LandmarkType
  tags                String[]
  createdAt           DateTime      @default(now())

  destination         Destination   @relation(fields: [destinationId], references: [id], onDelete: Cascade)
}

enum Gender {
  MALE
  FEMALE
  OTHER
}

enum Continent {
  Asia
  Europe
  Africa
  North_America
  South_America
  Australia_Oceania
  Antarctica
}

enum LandmarkType {
  RESTAURANT  
  MONUMENT 
  ANTIQUE 
  BUILDING  
  RELIC  
  ART 
  NATURE
}